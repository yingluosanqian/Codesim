name: Detect Code Plagiarism 

on:
  workflow_dispatch:
    inputs:
      root:
        description: 'Root dir for codes'
        required: true
        default: 'examples'

env:
  CARGO_TERM_COLOR: always

jobs:
  run:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Download bits/stdc++.h
        run: |
          sudo mkdir /Library/Developer/CommandLineTools/usr/include/c++/v1/bits
          sudo chmod 777 /Library/Developer/CommandLineTools/usr/include/c++/v1/bits
          sudo curl https://raw.githubusercontent.com/tekfyl/bits-stdc-.h-for-mac/master/stdc%2B%2B.h > /Library/Developer/CommandLineTools/usr/include/c++/v1/bits/stdc++.h
          sudo mkdir /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/bits
          sudo cp /Library/Developer/CommandLineTools/usr/include/c++/v1/bits/stdc++.h /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/bits/stdc++.h
          sudo mkdir /Applications/Xcode_13.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/bits
          sudo cp /Library/Developer/CommandLineTools/usr/include/c++/v1/bits/stdc++.h /Applications/Xcode_13.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/bits/stdc++.h
          sudo mkdir /Applications/Xcode_13.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/bits
          sudo cp /Library/Developer/CommandLineTools/usr/include/c++/v1/bits/stdc++.h  /Applications/Xcode_13.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/bits/stdc++.h
          cat /Library/Developer/CommandLineTools/usr/include/c++/v1/bits/stdc++.h
      - name: Build
        run: cargo install --path .
      - name: Detect
        uses: actions/github-script@v5
        with:
          script: |
            const { basename } = require('path');
            const { readdirSync, writeFileSync } = require('fs');
            const dirents = readdirSync('${{ github.event.inputs.root }}', { withFileTypes: true });
            const files = [];
            const report = `report/${ basename('${{ github.event.inputs.root }}') }.csv`;
            for (const dirent of dirents) {
              if (dirent.isFile()) {
                const filename = './${{ github.event.inputs.root }}/' + dirent.name;
                files.push(filename)
              }
            }
            await exec.exec('codesim', ['--verbose', '--csv', report, '--files', ...files])
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: report/
